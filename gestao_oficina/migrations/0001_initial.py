# Generated by Django 5.2.1 on 2025-05-22 16:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255)),
                ('telefone_principal', models.CharField(max_length=20)),
                ('telefone_secundario', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('cpf_cnpj', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('endereco_rua', models.CharField(blank=True, max_length=255, null=True)),
                ('endereco_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('endereco_complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('endereco_bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('endereco_cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('endereco_estado', models.CharField(blank=True, max_length=2, null=True)),
                ('endereco_cep', models.CharField(blank=True, max_length=10, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('mecanico', 'Mecânico')], default='mecanico', help_text='Define o papel do usuário no sistema', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrdemDeServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_os', models.CharField(help_text='Número único da Ordem de Serviço', max_length=50, unique=True)),
                ('data_entrada', models.DateTimeField(auto_now_add=True)),
                ('data_saida_prevista', models.DateField(blank=True, null=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('descricao_problema_cliente', models.TextField()),
                ('diagnostico_mecanico', models.TextField(blank=True, null=True)),
                ('servicos_executados_obs', models.TextField(blank=True, help_text='Observações gerais sobre os serviços executados', null=True)),
                ('valor_total_pecas', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valor_total_servicos', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status_os', models.CharField(choices=[('Aberta', 'Aberta'), ('Em Andamento', 'Em Andamento'), ('Aguardando Pecas', 'Aguardando Peças'), ('Aguardando Aprovacao', 'Aguardando Aprovação'), ('Concluida', 'Concluída'), ('Cancelada', 'Cancelada'), ('Faturada', 'Faturada')], default='Aberta', max_length=30)),
                ('observacoes_internas', models.TextField(blank=True, null=True)),
                ('data_criacao_os', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordens_servico', to='gestao_oficina.cliente')),
                ('mecanico_responsavel', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'mecanico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='os_responsaveis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ordem de Serviço',
                'verbose_name_plural': 'Ordens de Serviço',
                'ordering': ['-data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='ItemOsServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao_servico', models.CharField(max_length=255)),
                ('valor_servico', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ordem_servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_servicos', to='gestao_oficina.ordemdeservico')),
            ],
            options={
                'verbose_name': 'Item de Serviço da OS',
                'verbose_name_plural': 'Itens de Serviços da OS',
            },
        ),
        migrations.CreateModel(
            name='ItemOsPeca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao_peca', models.CharField(max_length=255)),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ordem_servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_pecas', to='gestao_oficina.ordemdeservico')),
            ],
            options={
                'verbose_name': 'Item de Peça da OS',
                'verbose_name_plural': 'Itens de Peças da OS',
            },
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=10, unique=True)),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('ano_fabricacao', models.IntegerField(blank=True, null=True)),
                ('ano_modelo', models.IntegerField(blank=True, null=True)),
                ('cor', models.CharField(blank=True, max_length=50, null=True)),
                ('chassi', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='veiculos', to='gestao_oficina.cliente')),
            ],
        ),
        migrations.AddField(
            model_name='ordemdeservico',
            name='veiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordens_servico', to='gestao_oficina.veiculo'),
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_agendamento', models.DateField()),
                ('hora_agendamento', models.TimeField()),
                ('servico_solicitado', models.TextField()),
                ('status_agendamento', models.CharField(choices=[('Agendado', 'Agendado'), ('Confirmado', 'Confirmado'), ('Cancelado', 'Cancelado'), ('Realizado', 'Realizado'), ('Nao Compareceu', 'Não Compareceu')], default='Agendado', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('data_criacao_agendamento', models.DateTimeField(auto_now_add=True)),
                ('mecanico_atribuido', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'mecanico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos_responsaveis', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='gestao_oficina.cliente')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='gestao_oficina.veiculo')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['data_agendamento', 'hora_agendamento'],
                'unique_together': {('data_agendamento', 'hora_agendamento', 'mecanico_atribuido')},
            },
        ),
    ]
